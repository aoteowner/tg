// ignore_for_file: unused_element

part of '../tg.dart';

final _production = RsaPublicKey(
    e: Uint8List.fromList([1, 0, 1]),
    n: Uint8List.fromList([
      0xE8,
      0xBB,
      0x33,
      0x05,
      0xC0,
      0xB5,
      0x2C,
      0x6C,
      0xF2,
      0xAF,
      0xDF,
      0x76,
      0x37,
      0x31,
      0x34,
      0x89,
      0xE6,
      0x3E,
      0x05,
      0x26,
      0x8E,
      0x5B,
      0xAD,
      0xB6,
      0x01,
      0xAF,
      0x41,
      0x77,
      0x86,
      0x47,
      0x2E,
      0x5F,
      0x93,
      0xB8,
      0x54,
      0x38,
      0x96,
      0x8E,
      0x20,
      0xE6,
      0x72,
      0x9A,
      0x30,
      0x1C,
      0x0A,
      0xFC,
      0x12,
      0x1B,
      0xF7,
      0x15,
      0x1F,
      0x83,
      0x44,
      0x36,
      0xF7,
      0xFD,
      0xA6,
      0x80,
      0x84,
      0x7A,
      0x66,
      0xBF,
      0x64,
      0xAC,
      0xCE,
      0xC7,
      0x8E,
      0xE2,
      0x1C,
      0x0B,
      0x31,
      0x6F,
      0x0E,
      0xDA,
      0xFE,
      0x2F,
      0x41,
      0x90,
      0x8D,
      0xA7,
      0xBD,
      0x1F,
      0x4A,
      0x51,
      0x07,
      0x63,
      0x8E,
      0xEB,
      0x67,
      0x04,
      0x0A,
      0xCE,
      0x47,
      0x2A,
      0x14,
      0xF9,
      0x0D,
      0x9F,
      0x7C,
      0x2B,
      0x7D,
      0xEF,
      0x99,
      0x68,
      0x8B,
      0xA3,
      0x07,
      0x3A,
      0xDB,
      0x57,
      0x50,
      0xBB,
      0x02,
      0x96,
      0x49,
      0x02,
      0xA3,
      0x59,
      0xFE,
      0x74,
      0x5D,
      0x81,
      0x70,
      0xE3,
      0x68,
      0x76,
      0xD4,
      0xFD,
      0x8A,
      0x5D,
      0x41,
      0xB2,
      0xA7,
      0x6C,
      0xBF,
      0xF9,
      0xA1,
      0x32,
      0x67,
      0xEB,
      0x95,
      0x80,
      0xB2,
      0xD0,
      0x6D,
      0x10,
      0x35,
      0x74,
      0x48,
      0xD2,
      0x0D,
      0x9D,
      0xA2,
      0x19,
      0x1C,
      0xB5,
      0xD8,
      0xC9,
      0x39,
      0x82,
      0x96,
      0x1C,
      0xDF,
      0xDE,
      0xDA,
      0x62,
      0x9E,
      0x37,
      0xF1,
      0xFB,
      0x09,
      0xA0,
      0x72,
      0x20,
      0x27,
      0x69,
      0x60,
      0x32,
      0xFE,
      0x61,
      0xED,
      0x66,
      0x3D,
      0xB7,
      0xA3,
      0x7F,
      0x6F,
      0x26,
      0x3D,
      0x37,
      0x0F,
      0x69,
      0xDB,
      0x53,
      0xA0,
      0xDC,
      0x0A,
      0x17,
      0x48,
      0xBD,
      0xAA,
      0xFF,
      0x62,
      0x09,
      0xD5,
      0x64,
      0x54,
      0x85,
      0xE6,
      0xE0,
      0x01,
      0xD1,
      0x95,
      0x32,
      0x55,
      0x75,
      0x7E,
      0x4B,
      0x8E,
      0x42,
      0x81,
      0x33,
      0x47,
      0xB1,
      0x1D,
      0xA6,
      0xAB,
      0x50,
      0x0F,
      0xD0,
      0xAC,
      0xE7,
      0xE6,
      0xDF,
      0xA3,
      0x73,
      0x61,
      0x99,
      0xCC,
      0xAF,
      0x93,
      0x97,
      0xED,
      0x07,
      0x45,
      0xA4,
      0x27,
      0xDC,
      0xFA,
      0x6C,
      0xD6,
      0x7B,
      0xCB,
      0x1A,
      0xCF,
      0xF3,
    ]));

final _test = RsaPublicKey(
    e: Uint8List.fromList([1, 0, 1]),
    n: Uint8List.fromList([
      0xC8,
      0xC1,
      0x1D,
      0x63,
      0x56,
      0x91,
      0xFA,
      0xC0,
      0x91,
      0xDD,
      0x94,
      0x89,
      0xAE,
      0xDC,
      0xED,
      0x29,
      0x32,
      0xAA,
      0x8A,
      0x0B,
      0xCE,
      0xFE,
      0xF0,
      0x5F,
      0xA8,
      0x00,
      0x89,
      0x2D,
      0x9B,
      0x52,
      0xED,
      0x03,
      0x20,
      0x08,
      0x65,
      0xC9,
      0xE9,
      0x72,
      0x11,
      0xCB,
      0x2E,
      0xE6,
      0xC7,
      0xAE,
      0x96,
      0xD3,
      0xFB,
      0x0E,
      0x15,
      0xAE,
      0xFF,
      0xD6,
      0x60,
      0x19,
      0xB4,
      0x4A,
      0x08,
      0xA2,
      0x40,
      0xCF,
      0xDD,
      0x28,
      0x68,
      0xA8,
      0x5E,
      0x1F,
      0x54,
      0xD6,
      0xFA,
      0x5D,
      0xEA,
      0xA0,
      0x41,
      0xF6,
      0x94,
      0x1D,
      0xDF,
      0x30,
      0x26,
      0x90,
      0xD6,
      0x1D,
      0xC4,
      0x76,
      0x38,
      0x5C,
      0x2F,
      0xA6,
      0x55,
      0x14,
      0x23,
      0x53,
      0xCB,
      0x4E,
      0x4B,
      0x59,
      0xF6,
      0xE5,
      0xB6,
      0x58,
      0x4D,
      0xB7,
      0x6F,
      0xE8,
      0xB1,
      0x37,
      0x02,
      0x63,
      0x24,
      0x6C,
      0x01,
      0x0C,
      0x93,
      0xD0,
      0x11,
      0x01,
      0x41,
      0x13,
      0xEB,
      0xDF,
      0x98,
      0x7D,
      0x09,
      0x3F,
      0x9D,
      0x37,
      0xC2,
      0xBE,
      0x48,
      0x35,
      0x2D,
      0x69,
      0xA1,
      0x68,
      0x3F,
      0x8F,
      0x6E,
      0x6C,
      0x21,
      0x67,
      0x98,
      0x3C,
      0x76,
      0x1E,
      0x3A,
      0xB1,
      0x69,
      0xFD,
      0xE5,
      0xDA,
      0xAA,
      0x12,
      0x12,
      0x3F,
      0xA1,
      0xBE,
      0xAB,
      0x62,
      0x1E,
      0x4D,
      0xA5,
      0x93,
      0x5E,
      0x9C,
      0x19,
      0x8F,
      0x82,
      0xF3,
      0x5E,
      0xAE,
      0x58,
      0x3A,
      0x99,
      0x38,
      0x6D,
      0x81,
      0x10,
      0xEA,
      0x6B,
      0xD1,
      0xAB,
      0xB0,
      0xF5,
      0x68,
      0x75,
      0x9F,
      0x62,
      0x69,
      0x44,
      0x19,
      0xEA,
      0x5F,
      0x69,
      0x84,
      0x7C,
      0x43,
      0x46,
      0x2A,
      0xBE,
      0xF8,
      0x58,
      0xB4,
      0xCB,
      0x5E,
      0xDC,
      0x84,
      0xE7,
      0xB9,
      0x22,
      0x6C,
      0xD7,
      0xBD,
      0x7E,
      0x18,
      0x3A,
      0xA9,
      0x74,
      0xA7,
      0x12,
      0xC0,
      0x79,
      0xDD,
      0xE8,
      0x5B,
      0x9D,
      0xC0,
      0x63,
      0xB8,
      0xA5,
      0xC0,
      0x8E,
      0x8F,
      0x85,
      0x9C,
      0x0E,
      0xE5,
      0xDC,
      0xD8,
      0x24,
      0xC7,
      0x80,
      0x7F,
      0x20,
      0x15,
      0x33,
      0x61,
      0xA7,
      0xF6,
      0x3C,
      0xFD,
      0x2A,
      0x43,
      0x3A,
      0x1B,
      0xE7,
      0xF5,
    ]));

class RRSaKey {
  RRSaKey({required this.e, required this.n});
  final BigInt e;
  final BigInt n;
}

final _t = RRSaKey(
    e: BigInt.parse('10001', radix: 16),
    n: BigInt.parse(
        'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b4'
        '4a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c'
        '010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c19'
        '8f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c0'
        '79dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',
        radix: 16));
final _p = RRSaKey(
    e: BigInt.parse('10001', radix: 16),
    n: BigInt.parse(
        'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7'
        'fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb57'
        '50bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda'
        '629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42'
        '813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',
        radix: 16));

final rsaKeys = {
  // 0xD09D1D85DE64FD85: _production, // -3414540481677951611
  // 0xB25898DF208D2603: _test, // -5595554452916591101
  0xD09D1D85DE64FD85: _p, // -3414540481677951611
  0xB25898DF208D2603: _t, // -5595554452916591101
};

const _epochTicks = 621355968000000000;

extension _TicksOnDateTime on DateTime {
  int get ticks => microsecondsSinceEpoch * 10 + _epochTicks;
}
